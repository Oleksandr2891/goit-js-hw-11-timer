{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","value","start","startTime","getTime","setInterval","currentTime","Date","now","timeDelta","udateClockface","getTimeComponents","time","days","Math","floor","toString","padStart","hours","mins","secs","counter","dayface","document","querySelector","timeface","textContent"],"mappings":";;;AA2EC,aA3ED,QAAA,oBAEA,MAAMA,EAEFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXE,KAAAA,MAAQD,EAGjBE,MAAMC,GACFA,EAAY,KAAKF,MAAMG,UAEvBC,YAAY,KACFC,MAAAA,EAAcC,KAAKC,MACnBC,EAAYN,EAAYG,EAE9BI,EADa,KAAKC,kBAAkBF,KAErC,KAIPE,kBAAkBC,GAMP,MAAA,CAAEC,KALIC,KAAKC,MAAMH,EAAQ,OAAsBI,WAAWC,SAAS,EAAG,KAK9DC,MAJDJ,KAAKC,MAAOH,EAAQ,MAAyB,MAAiBI,WAAWC,SAAS,EAAG,KAI7EE,KAHTL,KAAKC,MAAOH,EAAQ,KAAoB,KAAYI,WAAWC,SAAS,EAAG,KAG5DG,KAFfN,KAAKC,MAAOH,EAAQ,IAAc,KAAMI,WAAWC,SAAS,EAAG,OAQpF,MAAMI,EAAU,IAAIxB,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIO,KAAK,kBAmCzB,SAASG,GAAe,KAAEG,EAAF,MAAQK,EAAR,KAAeC,EAAf,KAAqBC,IACnCE,MAAAA,EAAUC,SAASC,cAAc,kBACjCC,EAAWF,SAASC,cAAc,kBACxCF,EAAQI,oBAAsBb,IAC9BY,EAASC,oBAAsBR,KAASC,KAAQC,IApCpDC,EAAQnB","file":"src.f05b1085.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.value = targetDate;\n    }\n\n    start(startTime) {\n        startTime = this.value.getTime();\n\n        setInterval(() => {\n            const currentTime = Date.now();\n            const timeDelta = startTime - currentTime;\n            const time = this.getTimeComponents(timeDelta);\n            udateClockface(time)\n        }, 1000);\n\n    }\n\n    getTimeComponents(time) {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24)).toString().padStart(3, '0');\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n        const secs = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n\n        return { days, hours, mins, secs };\n    };\n};\n\n\n\nconst counter = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2022'),\n});\n\ncounter.start();\n\n// const countdownTimer = {\n\n//     start() {\n//         const startTime = new Date('Jul 17, 2022');\n\n//         setInterval(() => {\n//             const currentTime = Date.now();\n//             const timeDelta = startTime - currentTime;\n//             const time = getTimeComponents(timeDelta);\n//             udateClockface(time)\n//             console.log(timeComponents);\n\n//         }, 1000);\n\n//     }\n\n// };\n\n// countdownTimer.start();\n\n\n// function getTimeComponents(time) {\n//     const days = Math.floor(time / (1000 * 60 * 60 * 24)).toString().padStart(3, '0');\n//     const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\n//     const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n//     const secs = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n\n//     return { days, hours, mins, secs };\n// };\n\nfunction udateClockface({ days, hours, mins, secs }) {\n    const dayface = document.querySelector('#timer-1 .date');\n    const timeface = document.querySelector('#timer-1 .time');\n    dayface.textContent = `Days ${days}`;\n    timeface.textContent = `Time ${hours}:${mins}:${secs}`;\n}\n\n\n"]}