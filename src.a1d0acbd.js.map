{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","intervalId","value","start","startTime","getTime","setInterval","currentTime","Date","now","timeDelta","stop","time","getTimeComponents","udateClockface","clearInterval","document","querySelector","style","backgroundColor","days","Math","floor","toString","padStart","hours","mins","secs","dayface","timeface","textContent","counter"],"mappings":";;;AAwDA,aAxDA,QAAA,oBAEA,MAAMA,EAEFC,aAAY,SAAEC,EAAF,WAAYC,IACfC,KAAAA,WAAa,KACbF,KAAAA,SAAWA,EACXG,KAAAA,MAAQF,EAGjBG,MAAMC,GACFA,EAAY,KAAKF,MAAMG,UAElBJ,KAAAA,WAAaK,YAAY,KAEpBC,MAAAA,EAAcC,KAAKC,MACnBC,EAAYN,EAAYG,EAC1BG,GAAAA,GAAa,EAAG,OAAO,KAAKC,OAC1BC,MAAAA,EAAO,KAAKC,kBAAkBH,GAC/BI,KAAAA,eAAeF,IAErB,KAIPD,OACII,cAAc,KAAKd,YACHe,SAASC,cAAe,QAChCC,MAAMC,gBAAkB,MAGpCN,kBAAkBD,GAMP,MAAA,CAAEQ,KALIC,KAAKC,MAAMV,EAAQ,OAAsBW,WAAWC,SAAS,EAAG,KAK9DC,MAJDJ,KAAKC,MAAOV,EAAQ,MAAyB,MAAiBW,WAAWC,SAAS,EAAG,KAI7EE,KAHTL,KAAKC,MAAOV,EAAQ,KAAoB,KAAYW,WAAWC,SAAS,EAAG,KAG5DG,KAFfN,KAAKC,MAAOV,EAAQ,IAAc,KAAMW,WAAWC,SAAS,EAAG,MAIhFV,gBAAe,KAAEM,EAAF,MAAQK,EAAR,KAAeC,EAAf,KAAqBC,IAC1BC,MAAAA,EAAUZ,SAASC,iBAAiB,KAAKlB,kBACzC8B,EAAWb,SAASC,iBAAiB,KAAKlB,kBAChD6B,EAAQE,oBAAsBV,IAC9BS,EAASC,oBAAsBL,KAASC,KAAQC,KAQxD,MAAMI,EAAU,IAAIlC,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIQ,KAAK,wBAGzBuB,EAAQ5B","file":"src.a1d0acbd.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n\n    constructor({ selector, targetDate }) {\n        this.intervalId = null;\n        this.selector = selector;\n        this.value = targetDate;\n    }\n\n    start(startTime) {\n        startTime = this.value.getTime();\n\n        this.intervalId = setInterval(() => {\n\n            const currentTime = Date.now();\n            const timeDelta = startTime - currentTime;\n            if (timeDelta <= 1) return this.stop();\n            const time = this.getTimeComponents(timeDelta);\n            this.udateClockface(time)\n\n        }, 1000);\n\n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n        const timerBg = document.querySelector(`body`);\n        timerBg.style.backgroundColor = 'red'\n    }\n\n    getTimeComponents(time) {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24)).toString().padStart(3, '0');\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, '0');\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, '0');\n        const secs = Math.floor((time % (1000 * 60)) / 1000).toString().padStart(2, '0');\n\n        return { days, hours, mins, secs };\n    };\n    udateClockface({ days, hours, mins, secs }) {\n        const dayface = document.querySelector(`${this.selector} .date`);\n        const timeface = document.querySelector(`${this.selector} .time`);\n        dayface.textContent = `Days ${days}`;\n        timeface.textContent = `Time ${hours}:${mins}:${secs}`;\n    }\n\n\n};\n\n\n\nconst counter = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 27, 2021 19:18'),\n});\n\ncounter.start();\n\n\n\n"]}